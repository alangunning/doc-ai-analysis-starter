name: Validate Markdown
on:
  push:
    paths: ["data/markdown/**/*.md"]
jobs:
  validate:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Load env
        id: env
        run: |
          if [ -f .env ]; then
            while IFS='=' read -r key value; do
              if [[ -z "$key" || "$key" == \#* ]]; then
                continue
              fi
              if [ -z "${!key}" ]; then
                echo "$key=$value" >> $GITHUB_ENV
                export "$key=$value"
              fi
            done < .env
          fi
          if [ "${DISABLE_ALL_WORKFLOWS}" = "true" ] || [ "${ENABLE_VALIDATE_WORKFLOW}" != "true" ]; then
            echo "skip=true" >> $GITHUB_OUTPUT
          fi
      - uses: actions/checkout@v4
        if: steps.env.outputs.skip != 'true'
      - uses: actions/setup-python@v5
        if: steps.env.outputs.skip != 'true'
        with: {python-version: "3.x"}
      - run: pip install docling openai pyyaml
        if: steps.env.outputs.skip != 'true'
      - run: |
          for md in $(git diff --name-only HEAD~1 -- 'data/markdown/**/*.md'); do
            raw=data/raw/${md#data/markdown/}
            raw=${raw%.*}.pdf
            python scripts/validate_markdown.py $raw $md --prompt prompts/validate-md.prompt.yaml || (
              git checkout -- $md
              python scripts/convert_to_markdown.py $raw --outdir data/markdown
              git add $md
            )
          done
        if: steps.env.outputs.skip != 'true'
      - name: Create PR if fixes
        if: steps.env.outputs.skip != 'true'
        run: |
          git diff --staged --quiet && exit 0
          branch="fix-md-$(date +%s)"
          git checkout -b "$branch"
          git commit -m "docs: fix Markdown conversion"
          git push origin "$branch"
          gh pr create --fill --title "Fix Markdown conversion" --body "Auto-corrected mismatched markdown."
